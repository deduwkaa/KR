@using OOPShop.Repositories.Interfaces;
@inject IProductRepository productRepository

<div class="container">
    <div class="row">
        <div class="col-auto">
    <p class="m-3">
        <b>Order Id:</b> @ViewBag.order.Id
        <br>
        <b>Status:</b> <span class="text-danger">@ViewBag.order.Status</span>
        <br>
        <b>Total sum of the order:</b> @ViewBag.order.TotalSum
        <br>      
    </p>

    @if (@ViewBag.order.Status == 0)
{
    <form class="form-inline" action="~/order/complete/orderId=@ViewBag.order.Id" method="post">
        <input class="btn btn-success m-2" type="submit" value="COMPLETE"/>
    </form>

    <form class="form-inline" action="~/order/cancel/orderId=@ViewBag.order.Id" method="post">
        <input class="btn btn-danger m-2" type="submit" value="CANCEL"/>
    </form>
}
        </div>

    <div class="col-auto">
        
<p class="m-0""><b>Products in the order:</b></p>
<table class="table-secondary table-bordered border-primary text-center">
    <tr>
        <th class="text-center" scope="col">Title</th>
        <th class="text-center" scope="col">Quantity</th>
        <th class="text-center" scope="col">Price For An Item</th>
        <th class="text-center" scope="col">Description</th>
    </tr>
@foreach (var item in ViewBag.items)
    {
        var product = productRepository.GetById(@item.ProductId);
    <tr>
        <td class="text-center" >@product.Title</td>
        <td class="text-center" >@item.Quantity</td>
        <td class="text-center" >@product.Price</td>
        <td class="text-center" >@product.Description</td>
    </tr>
    }
</table>
    </div>

    </div>
</div>